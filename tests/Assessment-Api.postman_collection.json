{
	"info": {
		"_postman_id": "f36d08ab-1dab-4262-9698-f5746742cc5d",
		"name": "Assessment-Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21843213"
	},
	"item": [
		{
			"name": "get Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an object with data, total, limit, and offset properties\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('object').that.has.all.keys('data', 'total', 'limit', 'offset');\r",
							"});\r",
							"\r",
							"pm.test(\"Each element in the data array has id, product_id, price, and date properties\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.data.forEach(function(item) {\r",
							"        pm.expect(item).to.be.an('object').that.has.all.keys('id', 'product_id', 'price', 'date');\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Basic Authorization header is present\", function() {\r",
							"    pm.expect(pm.request.headers.has('Authorization')).to.be.true;\r",
							"    pm.expect(pm.request.headers.get('Authorization')).to.include('Basic');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "13023",
						"username": "3442f8959a84dea7ee197c632cb2df15"
					}
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/order_items?sortBy=price",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"order_items"
					],
					"query": [
						{
							"key": "sortBy",
							"value": "price"
						}
					]
				}
			},
			"response": [
				{
					"name": "test",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/order_items?sortBy=price",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"order_items"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "price"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "425"
						},
						{
							"key": "ETag",
							"value": "W/\"1a9-Qjze5sAFlN5Ft+NG+ObINutbY3c\""
						},
						{
							"key": "Date",
							"value": "Thu, 23 Nov 2023 10:20:30 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"id\": \"655e8c3a47da109cb1a0dfd0\",\n            \"product_id\": \"325a06bcce0da45b7f4ecf2797dd40e4\",\n            \"price\": \"10.80\",\n            \"date\": \"2017-09-05 12:50:19\"\n        },\n        {\n            \"id\": \"655e8c3a47da109cb1a057d9\",\n            \"product_id\": \"f4621f8ad6f54a2e3c408884068be46d\",\n            \"price\": \"101.70\",\n            \"date\": \"2017-05-11 16:25:11\"\n        },\n        {\n            \"id\": \"655e8c3a47da109cb1a01c10\",\n            \"product_id\": \"ffb64e34a37740dafb6c88f1abd1fa61\",\n            \"price\": \"106.20\",\n            \"date\": \"2017-08-25 20:50:19\"\n        }\n    ],\n    \"total\": 3,\n    \"limit\": 20,\n    \"offset\": 0\n}"
				}
			]
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.status).to.exist;\r",
							"    pm.expect(responseData.message).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Message is a string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.message).to.be.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Verify that the order item has been successfully deleted\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.status).to.equal(200, \"Status should be 200\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "13023",
						"username": "3442f8959a84dea7ee197c632cb2df15"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:8080/api/v1/order_items/6d953888a914b67350d5bc4d48f2acab"
			},
			"response": [
				{
					"name": "Delete Order",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8080/api/v1/order_items/6d953888a914b67350d5bc4d48f2acab"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "58"
						},
						{
							"key": "ETag",
							"value": "W/\"3a-TaIjlVrdjlbvF52vzJZaZ1q4Fvg\""
						},
						{
							"key": "Date",
							"value": "Thu, 23 Nov 2023 10:39:36 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": 200,\n    \"message\": \"Order item deleted successfully\"\n}"
				}
			]
		},
		{
			"name": "Update Seller",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData).to.have.property('status');\r",
							"  pm.expect(responseData).to.have.property('data');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"City and state fields are not empty\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.data.city).to.exist.and.to.have.lengthOf.at.least(1, \"City field should not be empty\");\r",
							"  pm.expect(responseData.data.state).to.exist.and.to.have.lengthOf.at.least(1, \"State field should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"City and state fields are strings\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.data.city).to.be.a('string', \"City field should be a string\");\r",
							"  pm.expect(responseData.data.state).to.be.a('string', \"State field should be a string\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is in an acceptable range\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "13023",
						"username": "3442f8959a84dea7ee197c632cb2df15"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"new_city\": \"ikeja\",\r\n    \"new_state\": \"lagos\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/api/v1/account"
			},
			"response": [
				{
					"name": "Update Seller",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"new_city\": \"ikeja\",\r\n    \"new_state\": \"lagos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8080/api/v1/account"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "ETag",
							"value": "W/\"36-hLHB6a1yO7HNqjh0Ir+wMAqfPww\""
						},
						{
							"key": "Date",
							"value": "Thu, 23 Nov 2023 11:22:08 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": 200,\n    \"data\": {\n        \"city\": \"ikeja\",\n        \"state\": \"lagos\"\n    }\n}"
				}
			]
		}
	]
}